{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialFilters","filterReducer","filters","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","selectedTodo","dispatch","length","className","map","id","completed","title","onClick","currentTodoActions","selectTodo","TodoFilter","onSubmit","event","preventDefault","filterActions","currentTarget","value","placeholder","onChange","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","Loader","TodoModal","useState","isLoading","setLoading","selectedUser","setSelectedUser","a","user","window","console","log","useEffect","getUsersFromServer","href","email","name","App","data","todosActions","visibleTodos","useMemo","includes","getTodosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbba6c36.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type Filter = {\n  type: 'filter/QUERY' | 'filter/STATUS'\n  payload: string;\n};\n\nexport const actions = {\n  setQuery: (query: string): Filter => (\n    { type: 'filter/QUERY', payload: query }\n  ),\n  setStatus: (status: string): Filter => (\n    { type: 'filter/STATUS', payload: status }\n  ),\n};\n\nconst initialFilters = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (filters = initialFilters, action: Filter) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...filters, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...filters, status: action.payload };\n\n    default:\n      return filters;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype LoadTodos = {\n  type: 'load';\n  payload: Todo[];\n};\n\ntype Actions = LoadTodos;\n\nexport const actions = {\n  load: (todos: Todo[]): LoadTodos => ({ type: 'load', payload: todos }),\n};\n\nconst todosReducer = (\n  todos: Todo[] | null = null, action: Actions,\n): Todo[] | null => {\n  if (action.type === 'load') {\n    return action.payload;\n  }\n\n  return todos;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const selectTodo = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {todos?.length === 0 && todos !== null ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {\n                todos?.map(todo => (\n                  <tr\n                    key={todo.id}\n                    data-cy=\"todo\"\n                    className={todo.id === selectedTodo?.id\n                      ? 'has-background-info-light'\n                      : ''}\n                  >\n                    <td className=\"is-vcentered\">{todo.id}</td>\n                    <td className=\"is-vcentered\">\n                      {todo.completed && (\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      )}\n                    </td>\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={todo.completed ? 'has-text-success'\n                        : 'has-text-danger'}\n                      >\n                        {todo.title}\n                      </p>\n                    </td>\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => selectTodo(todo)}\n                      >\n                        <span className=\"icon\">\n                          <i className={\n                            todo.id !== selectedTodo?.id ? 'far fa-eye' : 'far fa-eye-slash'\n                          }\n                          />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const { query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const handleSelector = (event: React.FormEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setStatus(event.currentTarget.value));\n  };\n\n  const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.currentTarget.value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onClick={handleSelector}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => dispatch(filterActions.setQuery(''))}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | null) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setLoading] = useState(false);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  async function getUsersFromServer() {\n    setLoading(true);\n\n    try {\n      const user = await getUser(selectedTodo?.userId || null);\n\n      setSelectedUser(user);\n    } catch (error) {\n      window.console.log('Error: ', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const closeModal = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    getUsersFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #{selectedTodo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!selectedTodo?.completed && (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {!!selectedTodo?.completed && (\n                  <strong className=\"has-text-success\">Done</strong>\n                )}\n\n                {' by '}\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const [isLoading, setLoading] = useState(false);\n\n  async function getTodosFromServer() {\n    setLoading(true);\n\n    try {\n      const data = await getTodos();\n\n      dispatch(todosActions.load(data));\n    } catch (error) {\n      window.console.log('Error: ', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const visibleTodos = useMemo(() => {\n    if (status === 'all' && query !== '') {\n      return todos?.filter(todo => todo.title.includes(query));\n    }\n\n    if (status === 'completed') {\n      return todos?.filter(todo => {\n        return todo.completed === true && todo.title.includes(query);\n      });\n    }\n\n    if (status === 'active') {\n      return todos?.filter(todo => {\n        return todo.completed === false && todo.title.includes(query);\n      });\n    }\n\n    return todos;\n  }, [query, status, todos]) || null;\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}